# Generated by Django 5.2.1 on 2025-05-30 21:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="League",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "League",
                "verbose_name_plural": "Leagues",
                "db_table": "league",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateTimeField()),
                ("score_home", models.IntegerField(default=0)),
                ("score_away", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Match",
                "verbose_name_plural": "Matches",
                "db_table": "match",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("position", models.CharField(blank=True, max_length=30, null=True)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("nationality", models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                "verbose_name": "Player",
                "verbose_name_plural": "Players",
                "db_table": "player",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                ("capacity", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Venue",
                "verbose_name_plural": "Venues",
                "db_table": "venue",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PlayerMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("goals", models.IntegerField(default=0)),
                ("assists", models.IntegerField(default=0)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="match_players",
                        to="team.match",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_matches",
                        to="team.player",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Match",
                "verbose_name_plural": "Player Matches",
                "db_table": "player_match",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="player",
            name="player_match",
            field=models.ManyToManyField(
                related_name="players", through="team.PlayerMatch", to="team.match"
            ),
        ),
        migrations.CreateModel(
            name="PlayerTournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("goals", models.IntegerField(default=0)),
                ("assists", models.IntegerField(default=0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_tournaments",
                        to="team.player",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Tournament",
                "verbose_name_plural": "Player Tournaments",
                "db_table": "player_tournament",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Squad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("size", models.IntegerField(default=0)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="squads",
                        to="team.league",
                    ),
                ),
            ],
            options={
                "verbose_name": "Squad",
                "verbose_name_plural": "Squads",
                "db_table": "squad",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="player",
            name="squad",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="players",
                to="team.squad",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="away_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="away_matches",
                to="team.squad",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="home_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="home_matches",
                to="team.squad",
            ),
        ),
        migrations.CreateModel(
            name="Coach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                (
                    "squad",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coach",
                        to="team.squad",
                    ),
                ),
            ],
            options={
                "verbose_name": "Coach",
                "verbose_name_plural": "Coaches",
                "db_table": "coach",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SquadTournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "squad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="squad_tornaments",
                        to="team.squad",
                    ),
                ),
            ],
            options={
                "verbose_name": "Squad Tournament",
                "verbose_name_plural": "Squad Tournaments",
                "db_table": "squad_tournament",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "squad",
                    models.ManyToManyField(
                        related_name="squad_tournaments",
                        through="team.SquadTournament",
                        to="team.squad",
                    ),
                ),
                (
                    "teams",
                    models.ManyToManyField(
                        related_name="team_tournaments",
                        through="team.PlayerTournament",
                        to="team.player",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tornament",
                "verbose_name_plural": "Tornaments",
                "db_table": "tornament",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="squadtournament",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tornament_squads",
                to="team.tournament",
            ),
        ),
        migrations.AddField(
            model_name="playertournament",
            name="tornament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tournament_players",
                to="team.tournament",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches",
                to="team.venue",
            ),
        ),
    ]
